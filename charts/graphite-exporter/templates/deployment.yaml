apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graphite-exporter.fullname" . }}
  labels:
    {{- include "graphite-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "graphite-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "graphite-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "graphite-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/graphite_exporter"]
          {{- if .Values.graphite.mapping }}
          args: ["--graphite.listen-address", ":{{ .Values.service.graphite.port }}", "--graphite.mapping-config", "/tmp/graphite_mapping.conf"]
          {{- else }}
          args: ["--graphite.listen-address", ":{{ .Values.service.graphite.port }}"]
          {{- end }}
          ports:
          ports:
            - name: prometheus
              containerPort: {{ .Values.service.prometheus.port }}
              protocol: TCP
            - name: graphite
              containerPort: {{ .Values.service.graphite.port }}
          livenessProbe:
            httpGet:
              path: /
              port: prometheus
          readinessProbe:
            httpGet:
              path: /
              port: prometheus
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.graphite.mapping }}
          volumeMounts:
          - mountPath: /tmp/graphite_mapping.conf
            name: mapping
            subPath: graphite_mapping.conf
            readOnly: true
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.graphite.mapping }}
      volumes:
      - name: mapping
        configMap:
          name: {{ include "graphite-exporter.fullname" . }}-mapping
      {{- end }}
