# Default values for dbdump.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  registry: quay.io
  repository: monotek/gcloud-mysql
  # uses appVersion form Chart.yaml if not set
  tag: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images#
  pullPolicy: IfNotPresent

sshMountpath: "/home/cloudsdk"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

databases:
## Without a host set, this chart will not do anything as it is expected
## to be used only when there's an existing database to backup.
## The hostname must also be unique for each backup job.
- host: ""
  type: ""
  username: "root"
  # password
  password: ""
  port: "3306"
  # db name for single db backup
  database: ""
  # use --all-databases if enabled
  allDatabases: "true"
  # options to pass to dbdump
  options: "--opt --single-transaction"
  # debug output
  debug: "false"

# save sql backup to a directory named like the database or "alldatabases"
saveToDirectory: false

# if to dump all databases to stdout when not uploading
dumpAllToStdout: false

# cron time setting for backup scheduleq
schedule: "0 3 * * *"

# runs the first backup imidiatly after installing the chart
runDirectlyAfterInstall: true

# enable some debug options
debug: false

# cronjob history
successfulJobsHistoryLimit: 5
failedJobsHistoryLimit: 5

# additional steps for dbdump shell script
# will be inserted after all backup and upload jobs completed successfully.
# Use "${BACKUP_DIR}/${TIMESTAMP}_${MYSQL_DB}.sql.gz" as dump file name.
# see examples
additionalSteps: []
#  - gsutil cp "${BACKUP_DIR}/${TIMESTAMP}_${MYSQL_DB}.sql.gz" gs://mybucket/latest.sql.gz
#  - echo "latest sql dump updated"

## set persistentVolumeClaim to use a PVC that already exists.
## if set will override any settings under `persistence` otherwise
## if not set and `persistence.enabled` set to true, will create a PVC.
# persistentVolumeClaim: <existing-PVC>

# pod anotation
podAnnotations: {}

persistence:
  enabled: true
  size: 8Gi
  accessMode: ReadWriteOnce
  subPath:
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

# delete old backups
housekeeping:
  enabled: true
  keepDays: 10

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## Pod Security Context
securityContext:
  enabled: false
  fsGroup: 999
  runAsUser: 999

# dependency chart for ci
mariadb:
  enabled: false
