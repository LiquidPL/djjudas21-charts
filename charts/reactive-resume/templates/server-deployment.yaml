apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reactive-resume.nameServer" . }}
  labels:
    {{- include "reactive-resume.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      {{- include "reactive-resume.selectorLabelsServer" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.server.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "reactive-resume.selectorLabelsServer" . | nindent 8 }}
    spec:
      {{- with .Values.server.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "reactive-resume.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.server.podSecurityContext | nindent 8 }}
      containers:
        - name: server
          env:
            - name: JWT_EXPIRY_TIME
              value: "604800"
            - name: JWT_SECRET
              value: {{ .Values.config.jwtSecret }}
            {{- if .Values.config.mail.enabled }}
            - name: MAIL_FROM_EMAIL
              value: {{ .Values.config.mail.fromEmail }}
            - name: MAIL_FROM_NAME
              value: {{ .Values.config.mail.fromName }}
            - name: MAIL_HOST
              value: {{ .Values.config.mail.host }}
            - name: MAIL_PASSWORD
              value: {{ .Values.config.mail.password }}
            - name: MAIL_PORT
              value: {{ .Values.config.mail.port }}
            - name: MAIL_USERNAME
              value: {{ .Values.config.mail.username }}
            {{- end }}
            - name: POSTGRES_DB
              value: {{ .Values.config.postgres.db }}
            - name: POSTGRES_HOST
              value: {{ .Values.config.postgres.host }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.config.postgres.password }}
            - name: POSTGRES_PORT
              value: {{ .Values.config.postgres.port }}
            - name: POSTGRES_SSL_CERT
              value: {{ .Values.config.postgres.cert }}
            - name: POSTGRES_USER
              value: {{ .Values.config.postgres.user }}
            - name: PUBLIC_GOOGLE_CLIENT_ID
              value: {{ .Values.config.google.clientId }}
            - name: GOOGLE_API_KEY
              value: {{ .Values.config.google.apiKey }}
            - name: GOOGLE_CLIENT_SECRET
              value: {{ .Values.config.google.clientSecret }}
            {{- if .Values.ingress.enabled }}
            - name: PUBLIC_SERVER_URL
              value: {{ .Values.config.publicServerUrl }}
            - name: PUBLIC_URL
              value: {{ .Values.config.publicUrl }}
            {{- else }}
            - name: PUBLIC_SERVER_URL
              value: {{ .Values.config.publicServerUrl }}
            - name: PUBLIC_URL
              value: {{ .Values.config.publicUrl }}
            {{- end }}
            - name: SECRET_KEY
              value: {{ .Values.config.secretKey }}
            - name: STORAGE_ACCESS_KEY
              value: {{ .Values.config.storage.accessKey }}
            - name: STORAGE_BUCKET
              value: {{ .Values.config.storage.bucket }}
            - name: STORAGE_ENDPOINT
              value: {{ .Values.config.storage.endpoint }}
            - name: STORAGE_REGION
              value: {{ .Values.config.storage.region }}
            - name: STORAGE_SECRET_KEY
              value: {{ .Values.config.storage.secretKey }}
            - name: STORAGE_URL_PREFIX
              value: {{ .Values.config.storage.urlPrefix }}
          securityContext:
            {{- toYaml .Values.server.securityContext | nindent 12 }}
          image: "{{ .Values.client.image.repository }}:{{- include "reactive-resume.serverImageTag" . }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          ports:
            - name: server
              containerPort: {{ .Values.server.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: server
          readinessProbe:
            httpGet:
              path: /
              port: server
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
